<div id="comments-list">
    <style>
        .nickname-style {
            background-color: #2b2b2b;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            border: 1px solid #444;
            font-weight: normal;
        }
    </style>

    {{#commentDtos}}
        <div class="card m-3" id="comments-{{id}}" style="background-color: #1e1e1e; color: white; border: 1px solid #444;">
            <div class="card-header d-flex justify-content-between align-items-center" style="background-color: #2a2a2a; color: white; border-bottom: 1px solid #444;">
                <span class="nickname-style">{{nickname}}</span>
                <div>
                    <!-- [수정] comment-update-btn 클래스 추가, data-table-number 추가 -->
                    <button type="button" class="btn btn-sm btn-outline-primary me-2 comment-update-btn"
                            data-bs-toggle="modal"
                            data-bs-target="#comment-edit-modal"
                            data-bs-id="{{id}}"
                            data-bs-nickname="{{nickname}}"
                            data-bs-body="{{body}}"
                            data-bs-movie-id="{{movieId}}"
                            data-table-number="{{movieId}}"> <!-- movieId를 table-number 처럼 사용 -->
                        Update
                    </button>

                    <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn"
                            data-comment-id="{{id}}"
                            data-movie-id="{{movieId}}"> <!-- data-table-number 삭제해도 무방 -->
                        Delete
                    </button>
                </div>
            </div>
            <div class="card-body" style="border-top: 1px solid #444;">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

<!-- 모달: HTML 부분 수정 -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content" style="background-color: #1e1e1e; color: white;">
            <div class="modal-header" style="border-bottom: 1px solid #444;">
                <h5 class="modal-title w-100 text-center" style="color: white;">Edit Comment</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <!-- ... 스타일 및 form 내부 input/textarea는 그대로 ... -->
                    <div class="mb-3">
                        <label class="form-label dark-modal-label">Nickname</label>
                        <input type="text" class="form-control dark-input" id="edit-comment-nickname" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label dark-modal-label">Comment body</label>
                        <textarea class="form-control dark-input" rows="3" id="edit-comment-body"></textarea>
                    </div>

                    <input type="hidden" id="edit-comment-movie-id" />
                    <input type="hidden" id="edit-comment-id" />

                    <!-- [수정] ID를 제거하고 Class를 사용합니다. -->
                    <button type="button" class="btn btn-primary w-100 modal-update-confirm-btn">Update Success</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 스크립트: 완전히 새로운 방식으로 통합 -->
<script>
    // 전역 스코프에 모달과 최종 수정 버튼을 한 번만 선택합니다.
    const commentEditModal = document.querySelector("#comment-edit-modal");
    const modalUpdateConfirmBtn = document.querySelector(".modal-update-confirm-btn");

    // 1. 모달이 열릴 때 데이터를 채우는 리스너
    commentEditModal.addEventListener("show.bs.modal", function(event) {
        // 모달을 트리거한 버튼
        const triggerBtn = event.relatedTarget;

        // 트리거 버튼에서 데이터 가져오기
        const id = triggerBtn.getAttribute("data-bs-id");
        const nickname = triggerBtn.getAttribute("data-bs-nickname");
        const body = triggerBtn.getAttribute("data-bs-body");
        const movieId = triggerBtn.getAttribute("data-bs-movie-id");
        const tableNumber = triggerBtn.getAttribute("data-table-number"); // 영화 ID(테이블 번호) 가져오기

        // 모달의 입력 필드에 데이터 채우기
        commentEditModal.querySelector("#edit-comment-nickname").value = nickname;
        commentEditModal.querySelector("#edit-comment-body").value = body;
        commentEditModal.querySelector("#edit-comment-id").value = id;
        commentEditModal.querySelector("#edit-comment-movie-id").value = movieId;

        // [핵심] 최종 수정 버튼에 table-number 정보를 저장해 둡니다.
        modalUpdateConfirmBtn.setAttribute("data-table-number", tableNumber);
    });

    // 2. 모달의 최종 'Update Success' 버튼 클릭 리스너
    modalUpdateConfirmBtn.addEventListener("click", function() {
        // 이 버튼(modalUpdateConfirmBtn)에 저장해 둔 table-number를 가져옵니다.
        const tableNumber = this.getAttribute("data-table-number");

        const comment = {
            id: commentEditModal.querySelector("#edit-comment-id").value,
            nickname: commentEditModal.querySelector("#edit-comment-nickname").value,
            body: commentEditModal.querySelector("#edit-comment-body").value,
            movieId: commentEditModal.querySelector("#edit-comment-movie-id").value
        };

        // [핵심] 저장해 둔 tableNumber를 이용해 동적으로 URL을 생성합니다.
        const url = `/api/comments/${tableNumber}/${comment.id}`;

        fetch(url, {
            method: "PATCH",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(comment)
        }).then(response => {
            const msg = (response.ok) ? "댓글 수정 성공!" : "댓글 수정 실패!";
            alert(msg);
            if (response.ok) {
                window.location.reload();
            }
        });
    });

    // 3. 삭제 버튼 리스너 (이것도 동적으로 개선)
    document.getElementById('comments-list').addEventListener('click', function(event) {
        // 클릭된 요소가 .comment-delete-btn 클래스를 가졌는지 확인
        if (event.target.classList.contains('comment-delete-btn')) {
            const deleteBtn = event.target;
            const commentId = deleteBtn.getAttribute("data-comment-id");
            // [수정] movieId를 직접 가져와서 URL을 만듭니다.
            const movieId = deleteBtn.getAttribute("data-movie-id");

            const url = `/api/comments/${movieId}/${commentId}`;

            if (!confirm("정말로 삭제하시겠습니까?")) return;

            fetch(url, {
                method: "DELETE"
            }).then(response => {
                if (!response.ok) {
                    alert("댓글 삭제에 실패하였습니다");
                    return;
                }
                alert(`${commentId}번 댓글 삭제에 성공하였습니다`);
                window.location.reload();
            });
        }
    });
</script>
